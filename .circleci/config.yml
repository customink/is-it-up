---
# ---------------------------------------------------------------------------------------------------------------------
# CircleCI Commands Configuration
#
# Commands are re-usable steps that can be shared across jobs. For example the installation of gems using bundler or
# waiting on a database connection. By defining them inside the commands section, they can be invoked as any standard
# command on the system, but will already be preconfigured. This allows us to keep the jobs definition small and clean
# ---------------------------------------------------------------------------------------------------------------------
version: 2.1
commands:
  appraisal_install:
    description: "Performs the installation with Appraisal"
    parameters:
      ruby-version:
        type: string
    steps:
      - restore_cache:
          keys:
            - appraisal-cache-<< parameters.ruby-version >>-1.0-{{ checksum "is_it_up.gemspec" }}
      - run:
          name: "Appraisal Install"
          command: |
            bundle config --local path vendor/bundle
            bundle install --jobs 4 --retry 3
            bundle exec appraisal install
      - save_cache:
          key: appraisal-cache-<< parameters.ruby-version >>-1.0-{{ checksum "is_it_up.gemspec" }}
          paths:
            - vendor/bundle

# ---------------------------------------------------------------------------------------------------------------------
# CircleCI Job Configuration
#
# This section defines all the available jobs that can be executed inside a Workflow.
# Think of a Job as a batch of tasks that need to be performed to setup the environment and perform a specific task
# such as running RSpec, uploading the test results to CodeClimate etc.
# ---------------------------------------------------------------------------------------------------------------------
jobs:
  tests:
    parameters:
      ruby-version:
        type: string
      gemfile:
        type: string
    docker:
      - image: 916869144969.dkr.ecr.us-east-1.amazonaws.com/customink/base-ruby:<< parameters.ruby-version >>-v5.5
        user: root
        aws_auth:
          aws_access_key_id: ${PRODUCTION_AWS_ACCESS_KEY_ID}
          aws_secret_access_key: ${PRODUCTION_AWS_SECRET_ACCESS_KEY}
        environment:
          RAILS_ENV: test
          RACK_ENV: test
    working_directory: "/app"
    steps:
      - checkout
      - appraisal_install:
          ruby-version: << parameters.ruby-version >>
      - run:
          name: "Tests"
          command: bundle exec appraisal << parameters.gemfile >> rake test
      - store_artifacts:
          path: ./coverage
      - store_test_results:
          path: ./test/reports
      - store_artifacts:
          path: ./test/reports

# ---------------------------------------------------------------------------------------------------------------------
# CircleCI Workflow Execution Order
#
# Here we define the Workflow, the order of the various jobs and their dependencies.
# This allows us to decide whether to run certain tasks sequentially or run several of them in parallel.
# ---------------------------------------------------------------------------------------------------------------------
workflows:
  version: 2.1
  build-and-test:
    jobs:
      - tests:
          name: "Ruby 2.6 Tests with Rails 5.0"
          context: customink
          gemfile: "rails5.0"
          ruby-version: "2.6"
      - tests:
          name: "Ruby 2.6 Tests with Rails 5.1"
          context: customink
          gemfile: "rails5.1"
          ruby-version: "2.6"
      - tests:
          name: "Ruby 2.6 Tests with Rails 5.2"
          context: customink
          gemfile: "rails5.2"
          ruby-version: "2.6"
      - tests:
          name: "Ruby 2.6 Tests with Rails 6.0"
          context: customink
          gemfile: "rails6.0"
          ruby-version: "2.6"
      - tests:
          name: "Ruby 2.6 Tests with Rails 6.1"
          context: customink
          gemfile: "rails6.1"
          ruby-version: "2.6"
